<?php

function ga_weezevent_update_tournament_info_cron() {
  $config = \Drupal::config('ga_weezevent.settings');
  $weezevent = new \Drupal\ga_weezevent\WeezeventAPI($config->get('api_key'), $config->get('access_token'));

  $tournamentNids = \Drupal::entityQuery('node')
    ->condition('status', 1)
    ->condition('type', 'tournament')
    ->execute();

  foreach ($tournamentNids as $nid) {
    $node = \Drupal\node\Entity\Node::load($nid);
    if($node->field_tournament_weezevent_id->value!=NULL){
      try {
        \Drupal::logger('ga_weezevent')->info("Update weezevent tournament ".$node->getTitle()." with id ".$node->field_tournament_weezevent_id->value);

        $result = $weezevent->participants($node->field_tournament_weezevent_id->value);

        $tickets = array();
        $count = 0;
        if (isset($result)) {
          foreach ($result->participants as $participant) {
            $team = NULL;
            $pseudo = NULL;
            foreach ($participant->answers as $answer) {
              if ($answer->label === "Nom d'Ã©quipe") {
                $team = $answer->value;
              }
              if ($answer->label === "Pseudo") {
                $pseudo = $answer->value;
              }
            }
            $tickets[$participant->id_transaction][$team][] = $pseudo;
            $count++;
          }
          if ($node->field_tournament_type->value == "Equipe") {
            $count = count($tickets);
          }
          $node->field_tournament_subscribers->setValue(json_encode($tickets));
          $node->field_tournament_sub_count->setValue($count);
          $node->save();
        }

      } catch (Exception $e) {
        \Drupal::logger('ga_weezevent')->error($e->getMessage());
      }
    }
  }
}
